{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\nconst urlBase = 'http://api.tvmaze.com/search/shows?q=';\nconst ulElem = document.querySelector('.tvShows-list');\nconst favElem = document.querySelector('#favouritesList');\nconst inputValue = document.querySelector('.searchInput');\nconst searchButton = document.querySelector('.buttonSearch');\n\nlet tvShowsList = [];\nconst localStorageFavourites = readLocalStorage();\n\n//1.Función llamar a la Api\n\nfunction conectToApi() {\n  const inputName = inputValue.value;\n  ulElem.innerHTML = '';\n\n  fetch(`${urlBase}` + inputName)\n    .then(response => response.json())\n    .then(data => {\n      tvShowsList = data;\n      printTvShows(tvShowsList);\n    });\n}\n\n//2.Función pintar los resultados de la búsqueda (añadimos ID para comprobar luego que no la tenemos si ya la hemos añadido a favoritos)\n\nfunction printTvShows(tvShowsArr) {\n  for (let item of tvShowsArr) {\n    if (item.show.image !== null) {\n      ulElem.innerHTML += `<li id='${item.show.id}' class='tvShow-list_item'><div class=\"starred\" id='starred'></div><img src='${item.show.image.medium}' alt='Poster'</img><p class='show-title'>${item.show.name}</p></li>`;\n    } else {\n      ulElem.innerHTML += `<li id='${item.show.id}' class='tvShow-list_item'><div class=\"starred\" id='starred'></div><img src='https://via.placeholder.com/210x295/575352/ffffff/?text=TV' alt='Poster'</img><p class='show-title'>${item.show.name}</p></li>`;\n    }\n  }\n  addClickListeners();\n}\n\n//3.Función para añadir listener a los li para guardar en favoritos. La ejecutamos donde pinta las películas, es decir en el paso 2.\n\nfunction addClickListeners() {\n  const tvShowLiElements = document.querySelectorAll('.tvShow-list_item');\n\n  for (let tvShowLi of tvShowLiElements) {\n    tvShowLi.addEventListener('click', saveFavourites);\n  }\n}\n\n//4.Función que setea el LocalStorage.\n\nfunction setLocalStorage(favouritesArray) {\n  localStorage.setItem('tvShowInfo', JSON.stringify(favouritesArray));\n  // meter por cada indice su id y su valor, en local storage para que carguen con todas las busquedas\n}\n\n//5.Función que recoge el valor de LocalStorage, lee y parsea la info.\n\nfunction readLocalStorage() {\n  let localInfo = JSON.parse(localStorage.getItem('tvShowInfo'));\n  if (localInfo !== null) {\n    return localInfo;\n  }\n  return [];\n}\n\n//6. Me quedo con el objeto para poder usarlo. Función que relaciona el favorito con su ID ,lo lee y devuelve el objeto para usarlo.\n\nfunction getTvShowObject(id) {\n  return tvShowsList.find(tvShow => tvShow.show.id === parseInt(id));\n}\n\n//7 Función que guarda favoritos al hacer click como un objeto.\n\nfunction saveFavourites(evt) {\n  const id = evt.currentTarget.id;\n\n  const favoriteObject = getTvShowObject(id);\n\n  if (localStorageFavourites.indexOf(favoriteObject) === -1) {\n    localStorageFavourites.push(favoriteObject);\n    setLocalStorage(localStorageFavourites);\n    renderFavourites(localStorageFavourites);\n    tvShowSelectedStyle(id);\n  } else {\n    alert('Ya has añadido esta serie a favoritos');\n  }\n}\n\n//7.b Función que nos da estilo al tvShow seleccionado\n\nfunction tvShowSelectedStyle(id) {\n  const liSelected = document.getElementById(id);\n  liSelected.classList.add('tvShowSelected');\n\n /*  const starred = document.getElementById('star');\n  starred.classList.add('starred'); */\n}\n//7.c Función que nos quita el estilo al tvShow\n\nfunction tvShowRemoveSelectedStyle(id) {\n  const liSelected = document.getElementById(id);\n  liSelected.classList.remove('tvShowSelected');\n}\n\n//8.Función que nos pinta el contenido de favoritos.\n\nfunction renderFavourites(favouritesArr) {\n  favElem.innerHTML = '';\n  for (let favouriteItem of favouritesArr) {\n    if (favouriteItem.show.image !== null) {\n      favElem.innerHTML += `<li class='fav-list_item' id='${favouriteItem.show.id}'><img src='${favouriteItem.show.image.medium}' alt='Poster'</img><p>${favouriteItem.show.name}</p><span class='close'>&times;</span></li>`;\n    } else {\n      favElem.innerHTML += `<li class='fav-list_item' id='${favouriteItem.show.id}'><img src='https://via.placeholder.com/210x295/575352/ffffff/?text=TV' alt='Poster'</img><p>${favouriteItem.show.name}</p><span class='close'>&times;</span></li>`;\n    }\n    addRemoveFavouriteListeners();\n  }\n}\n//9.Añadimos botón close para poder eliminar nuestros favoritos.\nfunction addRemoveFavouriteListeners() {\n  const closeButtons = document.getElementsByClassName('close');\n  for (let closeButton of closeButtons) {\n    closeButton.addEventListener('click', deleteFavourite);\n  }\n}\n\n//10.Close functions / To delete favourites.Llamamos al elemento padre del close y volvemos a declarar el objeto para localizar su id y por ende su index.\nfunction deleteFavourite(evt) {\n  const favouriteId = evt.currentTarget.parentElement.id;\n\n  const favouriteObject = getTvShowObject(favouriteId);\n\n  const favouriteIndex = localStorageFavourites.indexOf(favouriteObject);\n\n  localStorageFavourites.splice(favouriteIndex, 1);\n\n  tvShowRemoveSelectedStyle(favouriteId);\n  setLocalStorage(localStorageFavourites);\n  renderFavourites(localStorageFavourites);\n}\n\nsearchButton.addEventListener('click', conectToApi);\nwindow.addEventListener('load', renderFavourites(localStorageFavourites));\n"]}