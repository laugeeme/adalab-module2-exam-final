{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\nconst urlBase = 'http://api.tvmaze.com/search/shows?q=';\nconst ulElem = document.querySelector('.tvShows-list');\nconst favElem = document.querySelector('#favouritesList');\nconst inputValue = document.querySelector('.searchInput');\nconst searchButton = document.querySelector('.buttonSearch');\nconst deleteButton = document.querySelector('.delete-all_button');\n\nlet tvShowsList = [];\nconst localStorageFavourites = readLocalStorage();\n\n//1.Función llamar a la Api\n\nfunction conectToApi() {\n  const inputName = inputValue.value;\n  ulElem.innerHTML = '';\n\n  fetch(`${urlBase}` + inputName)\n    .then(response => response.json())\n    .then(data => {\n      tvShowsList = data;\n      printTvShows(tvShowsList);\n    });\n}\n\nfunction conectToApiIfEnter(evt) {\n  if (evt.keyCode === 13) {\n    conectToApi();\n  }\n}\n\n//2.Función pintar los resultados de la búsqueda (añadimos ID para comprobar luego que no la tenemos si ya la hemos añadido a favoritos)\n\nfunction printTvShows(tvShowsArr) {\n  for (let item of tvShowsArr) {\n    const liElem = document.createElement('li');\n    const imgElem = document.createElement('img');\n    const pElem = document.createElement('p');\n    liElem.appendChild(imgElem);\n    liElem.appendChild(pElem);\n    liElem.setAttribute('id', item.show.id);\n    liElem.setAttribute('class', 'tvShow-list_item');\n    imgElem.setAttribute('alt', 'Poster');\n    pElem.setAttribute('class', 'show-title');\n    let pContent = document.createTextNode(item.show.name);\n    pElem.appendChild(pContent);\n    ulElem.appendChild(liElem);\n\n\n\n    if (item.show.image !== null) {\n      imgElem.setAttribute('src', item.show.image.medium);\n    \n    } else {\n      imgElem.setAttribute(\n        'src',\n        'https://via.placeholder.com/210x295/575352/ffffff/?text=TV'\n      );\n    }\n\n    if(isFavourited(item.show.id)){\n      liElem.setAttribute('class', 'tvShow-list_item tvShowSelected');\n    }\n\n\n  }\n  addClickListeners();\n}\n\nfunction isFavourited(id){\n  for(let localFavourite of localStorageFavourites){\n    if(id === localFavourite.show.id){\n      return true;\n    }\n  }\n  return false;\n}\n\n//3.Función para añadir listener a los li para guardar en favoritos. La ejecutamos donde pinta las películas, es decir en el paso 2.\n\nfunction addClickListeners() {\n  const tvShowLiElements = document.querySelectorAll('.tvShow-list_item');\n\n  for (let tvShowLi of tvShowLiElements) {\n    tvShowLi.addEventListener('click', saveAndDeleteFavourites);\n  }\n}\n\n//4.Función que setea el LocalStorage.\n\nfunction setLocalStorage(favouritesArray) {\n  localStorage.setItem('tvShowInfo', JSON.stringify(favouritesArray));\n  // meter por cada indice su id y su valor, en local storage para que carguen con todas las busquedas\n}\n\n//5.Función que recoge el valor de LocalStorage, lee y parsea la info.\n\nfunction readLocalStorage() {\n  let localInfo = JSON.parse(localStorage.getItem('tvShowInfo'));\n  if (localInfo !== null) {\n    return localInfo;\n  }\n  return [];\n}\n\n//6. Me quedo con el objeto para poder usarlo. Función que relaciona el favorito con su ID ,lo lee y devuelve el objeto para usarlo.\n\nfunction getTvShowObject(id) {\n  return tvShowsList.find(tvShow => tvShow.show.id === parseInt(id));\n}\n\n//7 Función que guarda y borra favoritos al hacer click como un objeto.\n\nfunction saveAndDeleteFavourites(evt) {\n  const id = evt.currentTarget.id;\n  const favoriteObject = getTvShowObject(id);\n  let favouriteIndex = localStorageFavourites.indexOf(favoriteObject);\n\n  if (favouriteIndex === -1) {\n    localStorageFavourites.push(favoriteObject);\n    tvShowSelectedStyle(id);\n  } else {\n    deleteFavouriteById(id);\n  }\n\n  setLocalStorage(localStorageFavourites);\n  renderFavourites(localStorageFavourites);\n}\n\n//7.b Función que nos da estilo o no al tvShow seleccionado\n\nfunction tvShowSelectedStyle(id) {\n  const liSelected = document.getElementById(id);\n  liSelected.classList.toggle('tvShowSelected');\n}\n\n//8.Función que nos pinta el contenido de favoritos.\n\nfunction renderFavourites(favouritesArr) {\n  favElem.innerHTML = '';\n  for (let favouriteItem of favouritesArr) {\n    if (favouriteItem.show.image !== null) {\n      favElem.innerHTML += `<li class='fav-list_item' id='${favouriteItem.show.id}'><img src='${favouriteItem.show.image.medium}' alt='Poster'></img><p>${favouriteItem.show.name}<span class='close'> &times;</span></p></li>`;\n    } else {\n      favElem.innerHTML += `<li class='fav-list_item' id='${favouriteItem.show.id}'><img src='https://via.placeholder.com/210x295/575352/ffffff/?text=TV' alt='Poster'></img><p>${favouriteItem.show.name}<span class='close'> &times;</span></p></li>`;\n    }\n    addRemoveFavouriteListeners();\n  }\n}\n//9.Añadimos botón close para poder eliminar nuestros favoritos del aside.\nfunction addRemoveFavouriteListeners() {\n  const closeButtons = document.getElementsByClassName('close');\n  for (let closeButton of closeButtons) {\n    closeButton.addEventListener('click', deleteFavouriteAside);\n  }\n}\n\n//10.Delete favorito /Llamamos al elemento padre del close y volvemos a declarar el objeto para localizar su id y por ende su index.\nfunction deleteFavouriteAside(evt) {\n  const favouriteId = evt.currentTarget.parentElement.parentElement.id;\n  deleteFavouriteById(favouriteId);\n}\n\nfunction deleteFavouriteById(id) {\n  const favouriteObject = getTvShowObject(id);\n  const favouriteIndex = localStorageFavourites.indexOf(favouriteObject);\n  localStorageFavourites.splice(favouriteIndex, 1);\n\n  tvShowSelectedStyle(id);\n  setLocalStorage(localStorageFavourites);\n  renderFavourites(localStorageFavourites);\n}\n\n//11.Delete all favourites.\n\nfunction deleteAllFavourites() {\n  const allStyledFavourites = document.querySelectorAll('.tvShowSelected');\n\n  for (let styleFavourite of allStyledFavourites) {\n    tvShowSelectedStyle(styleFavourite.id);\n  }\n\n  favElem.innerHTML = '';\n  setLocalStorage([]);\n  readLocalStorage();\n}\n\nsearchButton.addEventListener('click', conectToApi);\nwindow.addEventListener('keyup', conectToApiIfEnter);\nwindow.addEventListener('load', renderFavourites(localStorageFavourites));\ndeleteButton.addEventListener('click', deleteAllFavourites);\n"]}